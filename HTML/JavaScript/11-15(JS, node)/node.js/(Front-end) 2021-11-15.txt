node.js
1. 백엔드 개발자가 사용하는 언어
2. 서버에서 실행되는 자바스크립트
3. Google V8 JavaScript 엔진을 사용하여 코드를 실행하고 기본 모듈이 자바스크립트로 사용
4. node.js에는 웹 서버(apache, tomcat, iis, zeus ...) 과 같은 소프트웨어가 필요없이 웹 서버 역
5. NPM 이라는 패키지 관리자가 포함되어 있다. NPM은 node.js의 프로그램을 설치하고 관리하는데

ㆍ터미널에 -> npm init -> 현재 폴더를 서버로 지정

ㆍ터미널이 작동중이면 ctrl + c를 누르면 커서가 나온다.

 [FileSystem 모듈]
 파일처리와 관련된 모듈
 node.js에서 가장 중요하고 기초가 되는 모듈

───────────────── 메소드 ────────────────────
ㆍreadFile()      : 파일을 비동기적으로 읽는다.
ㆍreadFileSync()  : 파일을 동기적으로 읽는다.
ㆍwriteFile()     : 파일을 비동기적으로 쓴다.
ㆍwriteFileSync() : 파일을 동기적으로 쓴다.

───────────────────────────────────────────────────────────────────────────────────────────────
[예외처리]
프로그램이 실행되고 있는 런타임시에 에러가 발생할 경우 처리할 수 있는 프로그램 구간을 의미한다.
try{
    // 예외처리 안될시 실행문
} catch(Exception e) {
    // 예외처리 될시 실행문
} finally {
    // 예외처리가 되든 안되든 실행문
}
───────────────────────────────────────────────────────────────────────────────────────────────
 [node.js 터미널에서 실행하는 방법]
 : node 파일명(확장자명 X)
 : ex) first.js 란 파일이면 --> node first --> enter

───────────────────────────────────────────────────────────────────────────────────────────────
 [node.js 실행하는 방법]
 node 파일이름

───────────────────────────────────────────────────────────────────────────────────────────────
 [FileSystem 모듈]
 파일처리와 관련된 모듈
 node.js에서 가장 중요하고 기초가 되는 모듈이다.

───────────────────────────────────────────────────────────────────────────────────────────────
 [이벤트 루프(Event Loop)]
 node.js는 서버가 가동되면 변수들을 초기화하고 함수를 선언하고 이벤트가 발생할 때까지 기다린다.
 이벤트가 감지되었을 때 call back 함수를 호출

───────────────────────────────────────────────────────────────────────────────────────────────
 [events]
 이벤트 위주의 프로그램을 작성할 때 사용하는 모듈

───────────────────────────────────────────────────────────────────────────────────────────────
 [메소드]
 on() : 지정한 이벤트의 리스너를 추가한다.
 once() : 지정한 이벤트의 리스너를 추가하지만 한번 실행 이후 자동 제거된다.
 removelistener() : 지정한 이벤트에 대한 리스너를 제거
 emit () : 지정한 이벤트를 발생

───────────────────────────────────────────────────────────────────────────────────────────────
 [시스템 이벤트]
 process 객체는 노드에서 항상 사용할 수 있는 객체
 on()과 emit() 메소드는 객체를 생성하거나 모듈을 가져오지 않아도 바로 사용할 수 있다.
 on() 메소드를 호출하면서 이벤트 이름을 exit로 지정하면 내부적으로 프로세스가 끝날 때를 알 수 있다.
